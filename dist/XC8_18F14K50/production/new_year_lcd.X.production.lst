

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 11 15:14:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; #config settings
    21                           
    22                           	psect	cinit
    23  0000'                    __pcinit:
    24                           	callstack 0
    25  0000'                    start_initialization:
    26                           	callstack 0
    27  0000'                    __initialization:
    28                           	callstack 0
    29  0000'                    end_of_initialization:
    30                           	callstack 0
    31  0000'                    __end_of__initialization:
    32                           	callstack 0
    33  0000' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    34  0002' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    35  0004' 0100               	movlb	0
    36  0006' EF00' F000'        	goto	_main	;jump to C main() function
    37                           
    38                           	psect	cstackCOMRAM
    39  0000'                    __pcstackCOMRAM:
    40                           	callstack 0
    41  0000'                    ??_low_isr:
    42  0000'                    
    43                           ; 1 bytes @ 0x0
    44  0000'                    	ds	1
    45  0001'                    
    46                           ; 1 bytes @ 0x1
    47 ;;
    48 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    49 ;;
    50 ;; *************** function _main *****************
    51 ;; Defined at:
    52 ;;		line 33 in file "main.c"
    53 ;; Parameters:    Size  Location     Type
    54 ;;		None
    55 ;; Auto vars:     Size  Location     Type
    56 ;;		None
    57 ;; Return value:  Size  Location     Type
    58 ;;                  1    wreg      void 
    59 ;; Registers used:
    60 ;;		cstack
    61 ;; Tracked objects:
    62 ;;		On entry : 0/0
    63 ;;		On exit  : 0/0
    64 ;;		Unchanged: 0/0
    65 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
    66 ;;      Params:         0       0       0       0
    67 ;;      Locals:         0       0       0       0
    68 ;;      Temps:          0       0       0       0
    69 ;;      Totals:         0       0       0       0
    70 ;;Total ram usage:        0 bytes
    71 ;; Hardware stack levels required when called: 3
    72 ;; This function calls:
    73 ;;		_ConfigureOscillator
    74 ;;		_InitApp
    75 ;; This function is called by:
    76 ;;		Startup code after reset
    77 ;; This function uses a non-reentrant model
    78 ;;
    79                           
    80                           	psect	text0
    81  0000'                    __ptext0:
    82                           	callstack 0
    83  0000'                    _main:
    84                           	callstack 28
    85  0000'                    
    86                           ;main.c: 36:     ConfigureOscillator();
    87  0000' EC00' F000'        	call	_ConfigureOscillator	;wreg free
    88                           
    89                           ;main.c: 39:     InitApp();
    90  0004' EC00' F000'        	call	_InitApp	;wreg free
    91  0008'                    l19:
    92  0008' EF00' F000'        	goto	l19
    93  000C' EF00' F000'        	goto	start
    94  0010'                    __end_of_main:
    95                           	callstack 0
    96                           
    97 ;; *************** function _InitApp *****************
    98 ;; Defined at:
    99 ;;		line 28 in file "user.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		None
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   113 ;;      Params:         0       0       0       0
   114 ;;      Locals:         0       0       0       0
   115 ;;      Temps:          0       0       0       0
   116 ;;      Totals:         0       0       0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels used: 1
   119 ;; Hardware stack levels required when called: 2
   120 ;; This function calls:
   121 ;;		Nothing
   122 ;; This function is called by:
   123 ;;		_main
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text1
   128  0000'                    __ptext1:
   129                           	callstack 0
   130  0000'                    _InitApp:
   131                           	callstack 28
   132  0000' 0012               	return		;funcret
   133  0002'                    __end_of_InitApp:
   134                           	callstack 0
   135                           
   136 ;; *************** function _ConfigureOscillator *****************
   137 ;; Defined at:
   138 ;;		line 24 in file "system.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		None
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   152 ;;      Params:         0       0       0       0
   153 ;;      Locals:         0       0       0       0
   154 ;;      Temps:          0       0       0       0
   155 ;;      Totals:         0       0       0       0
   156 ;;Total ram usage:        0 bytes
   157 ;; Hardware stack levels used: 1
   158 ;; Hardware stack levels required when called: 2
   159 ;; This function calls:
   160 ;;		Nothing
   161 ;; This function is called by:
   162 ;;		_main
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text2
   167  0000'                    __ptext2:
   168                           	callstack 0
   169  0000'                    _ConfigureOscillator:
   170                           	callstack 28
   171  0000' 0012               	return		;funcret
   172  0002'                    __end_of_ConfigureOscillator:
   173                           	callstack 0
   174                           
   175 ;; *************** function _low_isr *****************
   176 ;; Defined at:
   177 ;;		line 67 in file "interrupts.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		None
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   191 ;;      Params:         0       0       0       0
   192 ;;      Locals:         0       0       0       0
   193 ;;      Temps:          1       0       0       0
   194 ;;      Totals:         1       0       0       0
   195 ;;Total ram usage:        1 bytes
   196 ;; Hardware stack levels used: 1
   197 ;; Hardware stack levels required when called: 1
   198 ;; This function calls:
   199 ;;		Nothing
   200 ;; This function is called by:
   201 ;;		Interrupt level 1
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	intcodelo
   206  0000'                    __pintcodelo:
   207                           	callstack 0
   208  0000'                    _low_isr:
   209                           	callstack 28
   210                           
   211                           ;incstack = 0
   212  0000' 8000'              	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   213  0002' C000' F000'        	movff	bsr,??_low_isr
   214  0006' C000' F000'        	movff	??_low_isr,bsr
   215  000A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   216  000C' 0010               	retfie	
   217  000E'                    __end_of_low_isr:
   218                           	callstack 0
   219                           
   220 ;; *************** function _high_isr *****************
   221 ;; Defined at:
   222 ;;		line 27 in file "interrupts.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		None
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   236 ;;      Params:         0       0       0       0
   237 ;;      Locals:         0       0       0       0
   238 ;;      Temps:          0       0       0       0
   239 ;;      Totals:         0       0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		Interrupt level 2
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	intcode
   250  0000'                    __pintcode:
   251                           	callstack 0
   252  0000'                    _high_isr:
   253                           	callstack 28
   254                           
   255                           ;incstack = 0
   256  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   257  0002' EF00' F000'        	goto	int_func
   258                           
   259                           	psect	intcode_body
   260  0000'                    __pintcode_body:
   261                           	callstack 28
   262  0000'                    int_func:
   263                           	callstack 28
   264  0000' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  0002' 0011               	retfie		f
   266  0004'                    __end_of_high_isr:
   267                           	callstack 0
   268                           
   269                           	psect	smallconst
   270  0000'                    __psmallconst:
   271                           	callstack 0
   272  0000' 00                 	db	0
   273  0001' 00                 	db	0	; dummy byte at the end
   274  0000                     
   275                           	psect	rparam
   276  0000                     
   277                           	psect	temp
   278  0000'                    btemp:
   279                           	callstack 0
   280  0000'                    	ds	1
   281  0000                     int$flags	set	btemp
   282  0000                     wtemp8	set	btemp+1
   283  0000                     ttemp5	set	btemp+1
   284  0000                     ttemp6	set	btemp+4
   285  0000                     ttemp7	set	btemp+8
   286                           
   287                           	psect	idloc
   288                           
   289                           ;Config register IDLOC0 @ 0x200000
   290                           ;	unspecified, using default values
   291  200000                     	org	2097152
   292  200000  FF                 	db	255
   293                           
   294                           ;Config register IDLOC1 @ 0x200001
   295                           ;	unspecified, using default values
   296  200001                     	org	2097153
   297  200001  FF                 	db	255
   298                           
   299                           ;Config register IDLOC2 @ 0x200002
   300                           ;	unspecified, using default values
   301  200002                     	org	2097154
   302  200002  FF                 	db	255
   303                           
   304                           ;Config register IDLOC3 @ 0x200003
   305                           ;	unspecified, using default values
   306  200003                     	org	2097155
   307  200003  FF                 	db	255
   308                           
   309                           ;Config register IDLOC4 @ 0x200004
   310                           ;	unspecified, using default values
   311  200004                     	org	2097156
   312  200004  FF                 	db	255
   313                           
   314                           ;Config register IDLOC5 @ 0x200005
   315                           ;	unspecified, using default values
   316  200005                     	org	2097157
   317  200005  FF                 	db	255
   318                           
   319                           ;Config register IDLOC6 @ 0x200006
   320                           ;	unspecified, using default values
   321  200006                     	org	2097158
   322  200006  FF                 	db	255
   323                           
   324                           ;Config register IDLOC7 @ 0x200007
   325                           ;	unspecified, using default values
   326  200007                     	org	2097159
   327  200007  FF                 	db	255
   328                           
   329                           	psect	config
   330                           
   331                           ;Config register CONFIG1L @ 0x300000
   332                           ;	unspecified, using default values
   333                           ;	CPU System Clock Selection bits
   334                           ;	CPUDIV = 0x0, unprogrammed default
   335                           ;	USB Clock Selection bit
   336                           ;	USBDIV = 0x0, unprogrammed default
   337  300000                     	org	3145728
   338  300000  00                 	db	0
   339                           
   340                           ;Config register CONFIG1H @ 0x300001
   341                           ;	unspecified, using default values
   342                           ;	Oscillator Selection bits
   343                           ;	FOSC = 0x7, unprogrammed default
   344                           ;	4 X PLL Enable bit
   345                           ;	PLLEN = 0x0, unprogrammed default
   346                           ;	Primary Clock Enable bit
   347                           ;	PCLKEN = 0x1, unprogrammed default
   348                           ;	Fail-Safe Clock Monitor Enable
   349                           ;	FCMEN = 0x0, unprogrammed default
   350                           ;	Internal/External Oscillator Switchover bit
   351                           ;	IESO = 0x0, unprogrammed default
   352  300001                     	org	3145729
   353  300001  27                 	db	39
   354                           
   355                           ;Config register CONFIG2L @ 0x300002
   356                           ;	unspecified, using default values
   357                           ;	Power-up Timer Enable bit
   358                           ;	PWRTEN = 0x1, unprogrammed default
   359                           ;	Brown-out Reset Enable bits
   360                           ;	BOREN = 0x3, unprogrammed default
   361                           ;	Brown-out Reset Voltage bits
   362                           ;	BORV = 0x3, unprogrammed default
   363  300002                     	org	3145730
   364  300002  1F                 	db	31
   365                           
   366                           ;Config register CONFIG2H @ 0x300003
   367                           ;	unspecified, using default values
   368                           ;	Watchdog Timer Enable bit
   369                           ;	WDTEN = 0x1, unprogrammed default
   370                           ;	Watchdog Timer Postscale Select bits
   371                           ;	WDTPS = 0xF, unprogrammed default
   372  300003                     	org	3145731
   373  300003  1F                 	db	31
   374                           
   375                           ; Padding undefined space
   376  300004                     	org	3145732
   377  300004  FF                 	db	255
   378                           
   379                           ;Config register CONFIG3H @ 0x300005
   380                           ;	unspecified, using default values
   381                           ;	HFINTOSC Fast Start-up bit
   382                           ;	HFOFST = 0x1, unprogrammed default
   383                           ;	MCLR Pin Enable bit
   384                           ;	MCLRE = 0x1, unprogrammed default
   385  300005                     	org	3145733
   386  300005  88                 	db	136
   387                           
   388                           ;Config register CONFIG4L @ 0x300006
   389                           ;	unspecified, using default values
   390                           ;	Stack Full/Underflow Reset Enable bit
   391                           ;	STVREN = 0x1, unprogrammed default
   392                           ;	Single-Supply ICSP Enable bit
   393                           ;	LVP = 0x1, unprogrammed default
   394                           ;	Boot Block Size Select bit
   395                           ;	BBSIZ = 0x0, unprogrammed default
   396                           ;	Extended Instruction Set Enable bit
   397                           ;	XINST = 0x0, unprogrammed default
   398                           ;	Background Debugger Enable bit
   399                           ;	DEBUG = 0x1, unprogrammed default
   400  300006                     	org	3145734
   401  300006  85                 	db	133
   402                           
   403                           ; Padding undefined space
   404  300007                     	org	3145735
   405  300007  FF                 	db	255
   406                           
   407                           ;Config register CONFIG5L @ 0x300008
   408                           ;	unspecified, using default values
   409                           ;	Code Protection bit
   410                           ;	CP0 = 0x1, unprogrammed default
   411                           ;	Code Protection bit
   412                           ;	CP1 = 0x1, unprogrammed default
   413  300008                     	org	3145736
   414  300008  03                 	db	3
   415                           
   416                           ;Config register CONFIG5H @ 0x300009
   417                           ;	unspecified, using default values
   418                           ;	Boot Block Code Protection bit
   419                           ;	CPB = 0x1, unprogrammed default
   420                           ;	Data EEPROM Code Protection bit
   421                           ;	CPD = 0x1, unprogrammed default
   422  300009                     	org	3145737
   423  300009  C0                 	db	192
   424                           
   425                           ;Config register CONFIG6L @ 0x30000A
   426                           ;	unspecified, using default values
   427                           ;	Table Write Protection bit
   428                           ;	WRT0 = 0x1, unprogrammed default
   429                           ;	Table Write Protection bit
   430                           ;	WRT1 = 0x1, unprogrammed default
   431  30000A                     	org	3145738
   432  30000A  03                 	db	3
   433                           
   434                           ;Config register CONFIG6H @ 0x30000B
   435                           ;	unspecified, using default values
   436                           ;	Configuration Register Write Protection bit
   437                           ;	WRTC = 0x1, unprogrammed default
   438                           ;	Boot Block Write Protection bit
   439                           ;	WRTB = 0x1, unprogrammed default
   440                           ;	Data EEPROM Write Protection bit
   441                           ;	WRTD = 0x1, unprogrammed default
   442  30000B                     	org	3145739
   443  30000B  E0                 	db	224
   444                           
   445                           ;Config register CONFIG7L @ 0x30000C
   446                           ;	unspecified, using default values
   447                           ;	Table Read Protection bit
   448                           ;	EBTR0 = 0x1, unprogrammed default
   449                           ;	Table Read Protection bit
   450                           ;	EBTR1 = 0x1, unprogrammed default
   451  30000C                     	org	3145740
   452  30000C  03                 	db	3
   453                           
   454                           ;Config register CONFIG7H @ 0x30000D
   455                           ;	unspecified, using default values
   456                           ;	Boot Block Table Read Protection bit
   457                           ;	EBTRB = 0x1, unprogrammed default
   458  30000D                     	org	3145741
   459  30000D  40                 	db	64
   460                           tosu	equ	0xFFF
   461                           tosh	equ	0xFFE
   462                           tosl	equ	0xFFD
   463                           stkptr	equ	0xFFC
   464                           pclatu	equ	0xFFB
   465                           pclath	equ	0xFFA
   466                           pcl	equ	0xFF9
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           prodh	equ	0xFF4
   472                           prodl	equ	0xFF3
   473                           indf0	equ	0xFEF
   474                           postinc0	equ	0xFEE
   475                           postdec0	equ	0xFED
   476                           preinc0	equ	0xFEC
   477                           plusw0	equ	0xFEB
   478                           fsr0h	equ	0xFEA
   479                           fsr0l	equ	0xFE9
   480                           wreg	equ	0xFE8
   481                           indf1	equ	0xFE7
   482                           postinc1	equ	0xFE6
   483                           postdec1	equ	0xFE5
   484                           preinc1	equ	0xFE4
   485                           plusw1	equ	0xFE3
   486                           fsr1h	equ	0xFE2
   487                           fsr1l	equ	0xFE1
   488                           bsr	equ	0xFE0
   489                           indf2	equ	0xFDF
   490                           postinc2	equ	0xFDE
   491                           postdec2	equ	0xFDD
   492                           preinc2	equ	0xFDC
   493                           plusw2	equ	0xFDB
   494                           fsr2h	equ	0xFDA
   495                           fsr2l	equ	0xFD9
   496                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      1       1       1        1.1%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBIGSFR           AD      0       0       9        0.0%
ABS                  0      0       0      10        0.0%
BIGRAM             2FF      0       0      11        0.0%
DATA                 0      0       0      12        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 11 15:14:18 2024

                         l20 0008                           l25 0000                           l19 0008  
                         l28 0000                           bsr 0000*                         l704 0000  
                        i2l5 0000                         i1l10 0006                         _main 0000  
                       btemp 0000                         start 0000*                ___param_bank 0000  
            __end_of_InitApp 0002                        ?_main 0000          _ConfigureOscillator 0000  
            __end_of_low_isr 000E                        ttemp5 0001                        ttemp6 0004  
                      ttemp7 0008                        wtemp8 0001         ?_ConfigureOscillator 0000  
            __initialization 0000                 __end_of_main 0010                       ??_main 0001  
              __activetblptr 0000                    ??_InitApp 0001        ??_ConfigureOscillator 0001  
           __end_of_high_isr 0004                       isa$std 0001                 __mediumconst 0000* 
                  ??_low_isr 0000                   __accesstop 0000*     __end_of__initialization 0000  
              ___rparam_used 0001               __pcstackCOMRAM 0000                    ?_high_isr 0000  
                    _InitApp 0000                      __Hparam 0000                      __Lparam 0000  
               __psmallconst 0000                      __pcinit 0000                      __ramtop 0000* 
                    __ptext0 0000                      __ptext1 0000                      __ptext2 0000  
                    _low_isr 0000                   ??_high_isr 0000               __pintcode_body 0000  
       end_of_initialization 0000                      int_func 0000  __end_of_ConfigureOscillator 0002  
        start_initialization 0000                     ?_InitApp 0000                    __pintcode 0000  
                __pintcodelo 0000                  __smallconst 0000*                    ?_low_isr 0000  
                   __Hrparam 0000*                    __Lrparam 0000*                    _high_isr 0000  
                   isa$xinst 0000                     int$flags 0000                     intlevel1 0000* 
                   intlevel2 0000* 
